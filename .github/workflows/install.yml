name: Install
on:
  release:
    types: [published]
  schedule:
    - cron: '0 0 * * *'
  workflow_dispatch:
    inputs:
      tag:
        description: 'Tag to install (e.g., open-composer@1.0.0)'
        default: 'open-composer@latest'
        required: false
        type: string
concurrency:
  group: ${{ github.workflow }}-${{ github.event_name }}-${{ github.head_ref || github.sha }}
  cancel-in-progress: true
jobs:
  install-e2e-cli:
    if: (github.event.release.tag_name && startsWith(github.event.release.tag_name, 'open-composer@')) || (github.event.inputs.tag && startsWith(github.event.inputs.tag, 'open-composer@')) || github.event_name == 'schedule'
    runs-on: ${{ matrix.os }}
    timeout-minutes: 10
    strategy:
      matrix:
        os: 
          - ubuntu-latest
          - macos-latest
          - windows-latest
      fail-fast: false
    permissions:
      contents: read
    steps:
      - name: Checkout
        uses: actions/checkout@v5
        with:
          fetch-depth: 0
          ref: ${{ github.event.release.tag_name || github.ref }}
      - name: Setup Node.js
        uses: actions/setup-node@v5
      - name: Install open-composer globally with retry
        uses: nick-fields/retry@v3
        with:
          retry_wait_seconds: 30
          timeout_seconds: 300
          max_attempts: 10
          command: npm install -g ${{ github.event.release.tag_name || github.event.inputs.tag || 'open-composer@latest' }}
      - name: Verify opencomposer command
        run: open-composer --version
  install-e2e-script:
    if: (github.event.release.tag_name && startsWith(github.event.release.tag_name, 'open-composer@')) || (github.event.inputs.tag && startsWith(github.event.inputs.tag, 'open-composer@')) || github.event_name == 'schedule'
    runs-on: ${{ matrix.os }}
    timeout-minutes: 10
    strategy:
      matrix:
        os:
          - ubuntu-latest
          - macos-latest
          - windows-latest
      fail-fast: false
    permissions:
      contents: read
    steps:
      - name: Checkout
        uses: actions/checkout@v5
        with:
          fetch-depth: 0
          ref: ${{ github.event.release.tag_name || github.ref }}
      - name: Test install.sh script with retry
        uses: nick-fields/retry@v3
        with:
          retry_wait_seconds: 30
          timeout_seconds: 300
          max_attempts: 10
          command: bash install.sh
      - name: Verify open-composer command after script install
        run: |
          export PATH="$HOME/.local/bin:$PATH"
          open-composer --version
        shell: bash
  install-e2e-brew:
    if: (github.event.release.tag_name && startsWith(github.event.release.tag_name, 'open-composer@')) || (github.event.inputs.tag && startsWith(github.event.inputs.tag, 'open-composer@')) || github.event_name == 'schedule'
    runs-on: macos-latest
    timeout-minutes: 10
    permissions:
      contents: read
    steps:
      - name: Checkout
        uses: actions/checkout@v5
        with:
          fetch-depth: 0
          ref: ${{ github.event.release.tag_name || github.ref }}
      - name: Setup Homebrew
        uses: Homebrew/actions/setup-homebrew@master
      - name: Install open-composer via brew with retry
        uses: nick-fields/retry@v3
        with:
          retry_wait_seconds: 30
          timeout_seconds: 300
          max_attempts: 10
          command: brew install shunkakinoki/tap/open-composer
      - name: Verify open-composer command after brew install
        run: open-composer --version
  install-e2e-chocolatey:
    if: (github.event.release.tag_name && startsWith(github.event.release.tag_name, 'open-composer@')) || (github.event.inputs.tag && startsWith(github.event.inputs.tag, 'open-composer@')) || github.event_name == 'schedule'
    runs-on: windows-latest
    timeout-minutes: 15
    permissions:
      contents: read
    steps:
      - name: Checkout
        uses: actions/checkout@v5
        with:
          fetch-depth: 0
          ref: ${{ github.event.release.tag_name || github.ref }}
      - name: Setup Chocolatey
        run: |
          Set-ExecutionPolicy Bypass -Scope Process -Force
          [System.Net.ServicePointManager]::SecurityProtocol = [System.Net.ServicePointManager]::SecurityProtocol -bor 3072
          iex ((New-Object System.Net.WebClient).DownloadString('https://chocolatey.org/install.ps1'))
          choco --version
        shell: pwsh
      - name: Install open-composer via Chocolatey with retry
        uses: nick-fields/retry@v3
        with:
          retry_wait_seconds: 30
          timeout_seconds: 300
          max_attempts: 10
          command: choco install open-composer -y
      - name: Verify open-composer command after Chocolatey install
        run: open-composer --version
        shell: pwsh
  install-e2e-winget:
    if: (github.event.release.tag_name && startsWith(github.event.release.tag_name, 'open-composer@')) || (github.event.inputs.tag && startsWith(github.event.inputs.tag, 'open-composer@')) || github.event_name == 'schedule'
    runs-on: windows-latest
    timeout-minutes: 15
    permissions:
      contents: read
    steps:
      - name: Checkout
        uses: actions/checkout@v5
        with:
          fetch-depth: 0
          ref: ${{ github.event.release.tag_name || github.ref }}
      - name: Install open-composer via WinGet with retry
        uses: nick-fields/retry@v3
        with:
          retry_wait_seconds: 30
          timeout_seconds: 300
          max_attempts: 10
          command: winget install open-composer
      - name: Verify open-composer command after WinGet install
        run: open-composer --version
        shell: pwsh
  install-e2e-scoop:
    if: (github.event.release.tag_name && startsWith(github.event.release.tag_name, 'open-composer@')) || (github.event.inputs.tag && startsWith(github.event.inputs.tag, 'open-composer@')) || github.event_name == 'schedule'
    runs-on: windows-latest
    timeout-minutes: 15
    permissions:
      contents: read
    steps:
      - name: Checkout
        uses: actions/checkout@v5
        with:
          fetch-depth: 0
          ref: ${{ github.event.release.tag_name || github.ref }}
      - name: Setup Scoop
        run: |
          Set-ExecutionPolicy RemoteSigned -scope Process
          iwr -useb get.scoop.sh | iex
          scoop --version
        shell: pwsh
      - name: Add extras bucket
        run: scoop bucket add extras
        shell: pwsh
      - name: Install open-composer via Scoop with retry
        uses: nick-fields/retry@v3
        with:
          retry_wait_seconds: 30
          timeout_seconds: 300
          max_attempts: 10
          command: scoop install extras/open-composer
      - name: Verify open-composer command after Scoop install
        run: open-composer --version
        shell: pwsh
  install-e2e-paru:
    if: (github.event.release.tag_name && startsWith(github.event.release.tag_name, 'open-composer@')) || (github.event.inputs.tag && startsWith(github.event.inputs.tag, 'open-composer@')) || github.event_name == 'schedule'
    runs-on: ubuntu-latest
    timeout-minutes: 15
    permissions:
      contents: read
    steps:
      - name: Checkout
        uses: actions/checkout@v5
        with:
          fetch-depth: 0
          ref: ${{ github.event.release.tag_name || github.ref }}
      - name: Setup Arch Linux container
        run: |
          sudo apt-get update
          sudo apt-get install -y docker.io
      - name: Test AUR package in Arch Linux container
        run: |
          docker run --rm -v ${{ github.workspace }}:/workspace -w /workspace archlinux:latest /bin/bash -c "
            pacman -Syu --noconfirm
            pacman -S --noconfirm git base-devel
            useradd -m -G wheel builder
            echo 'builder ALL=(ALL) NOPASSWD: ALL' >> /etc/sudoers
            su builder -c '
              cd /tmp
              git clone https://aur.archlinux.org/paru.git
              cd paru
              makepkg -si --noconfirm
              paru -S open-composer --noconfirm
              open-composer --version
            '
          "
  install-check:
    if: always()
    needs:
      - install-e2e-cli
      - install-e2e-script
      - install-e2e-brew
      - install-e2e-chocolatey
      - install-e2e-winget
      - install-e2e-scoop
      - install-e2e-paru
    runs-on: ubuntu-latest
    timeout-minutes: 3
    steps:
      - name: Alls Green
        uses: re-actors/alls-green@release/v1
        with:
          jobs: ${{ toJSON(needs) }}
          allowed-skips: install-e2e-cli,install-e2e-script,install-e2e-brew,install-e2e-chocolatey,install-e2e-winget,install-e2e-scoop,install-e2e-paru
