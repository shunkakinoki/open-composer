name: Release
on:
  release:
    types: [published]
  workflow_dispatch:
    inputs:
      tag:
        description: 'Tag to release'
        required: true
        type: string
concurrency:
  group: ${{ github.workflow }}-${{ github.event_name }}-${{ github.event.release.tag_name || github.event.inputs.tag || github.head_ref || github.sha }}
  cancel-in-progress: true
jobs:
  release-upload:
    if: (startsWith(github.event.release.tag_name, 'open-composer@') || github.event.inputs.tag != '') && !contains(github.event.release.tag_name || github.event.inputs.tag, '@open-composer')
    runs-on: ubuntu-latest
    timeout-minutes: 10
    permissions:
      contents: write
    steps:
      - name: Checkout
        uses: actions/checkout@v5
        with:
          fetch-depth: 0
          ref: ${{ github.event.inputs.tag || github.ref }}
      - name: Setup Bun
        uses: shunkakinoki/actions/.github/actions/setup-bun@2b817c8b6aa45b5661b54ed6b071d60ba8b43595
      - name: Build CLI Binary
        run: bun run prepublishOnly
        env:
          RELEASE_ZIP_FILES: true
      - name: Upload Binary Assets
        uses: svenstaro/upload-release-action@v2
        with:
          repo_token: ${{ secrets.GITHUB_TOKEN }}
          file_glob: true
          file: apps/cli/dist/open-composer-*.zip
          tag: ${{ github.event.release.tag_name || github.event.inputs.tag }}
          overwrite: true
  release-latest:
    needs: release-upload
    runs-on: ubuntu-latest
    timeout-minutes: 3
    permissions:
      contents: write
    steps:
      - name: Update Release as Latest
        uses: actions/github-script@v8
        with:
          script: |
            // Get the release details
            const { owner, repo } = context.repo;
            const release_id = context.payload.release.id;

            // Get the release details
            const { data: release } = await github.rest.repos.getRelease({
              owner,
              repo,
              release_id
            });

            // Update the release to be marked as latest and non-prerelease
            await github.rest.repos.updateRelease({
              owner,
              repo,
              release_id,
              prerelease: false,
              make_latest: true
            });

            console.log(`Updated release ${release.tag_name} as latest`);
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
  release-homebrew:
    needs: release-upload
    runs-on: ubuntu-latest
    timeout-minutes: 10
    permissions:
      contents: write
    steps:
      - name: Checkout
        uses: actions/checkout@v5
        with:
          fetch-depth: 0
      - name: Update Homebrew Tap
        run: ./scripts/release-homebrew-formula.sh "${{ github.event.release.tag_name || github.event.inputs.tag }}"
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
  release-chocolatey:
    needs: release-upload
    runs-on: ubuntu-latest
    timeout-minutes: 10
    permissions:
      contents: write
    steps:
      - name: Checkout
        uses: actions/checkout@v5
        with:
          fetch-depth: 0
      - name: Update Chocolatey Package
        run: ./scripts/release-chocolatey-package.sh "${{ github.event.release.tag_name || github.event.inputs.tag }}"
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
  release-winget:
    needs: release-upload
    runs-on: windows-latest
    timeout-minutes: 15
    permissions:
      contents: write
      pull-requests: write
    steps:
      - name: Checkout
        uses: actions/checkout@v5
        with:
          fetch-depth: 0
      - name: Update WinGet Package
        run: ./scripts/release-winget-package.ps1 -Tag "${{ github.event.release.tag_name || github.event.inputs.tag }}" -GitHubToken "${{ secrets.GITHUB_TOKEN }}"
        shell: pwsh
  release-scoop:
    needs: release-upload
    runs-on: ubuntu-latest
    timeout-minutes: 10
    permissions:
      contents: write
    steps:
      - name: Checkout
        uses: actions/checkout@v5
        with:
          fetch-depth: 0
      - name: Update Scoop Package
        run: ./scripts/release-scoop-package.sh "${{ github.event.release.tag_name || github.event.inputs.tag }}"
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
  release-paru:
    needs: release-upload
    runs-on: ubuntu-latest
    timeout-minutes: 10
    permissions:
      contents: write
    steps:
      - name: Checkout
        uses: actions/checkout@v5
        with:
          fetch-depth: 0
      - name: Update Paru/AUR Package
        run: ./scripts/release-paru-package.sh "${{ github.event.release.tag_name || github.event.inputs.tag }}"
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
  release-check:
    if: always()
    needs:
      - release-upload
      - release-latest
      - release-homebrew
      - release-chocolatey
      - release-winget
      - release-scoop
      - release-paru
    runs-on: ubuntu-latest
    timeout-minutes: 3
    steps:
      - name: Alls Green
        uses: re-actors/alls-green@release/v1
        with:
          jobs: ${{ toJSON(needs) }}
          allowed-skips: release-upload,release-latest,release-homebrew,release-chocolatey,release-winget,release-scoop,release-paru
